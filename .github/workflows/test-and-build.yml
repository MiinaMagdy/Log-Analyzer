name: Test and Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Start MySQL service
        run: |
          docker pull mysql:8.0
          docker run --name mysql -e MYSQL_ROOT_PASSWORD=${{ secrets.MYSQL_PASSWORD }} -e MYSQL_DATABASE=${{ secrets.MYSQL_DATABASE }} -p 3306:3306 -d mysql:8.0
          
          # Wait for MySQL to initialize
          echo "Waiting for MySQL to start..."
          sleep 10
          
          # Loop until MySQL is ready
          until docker exec mysql mysqladmin ping -uroot -p${{ secrets.MYSQL_PASSWORD }} --silent; do
            echo "Waiting for MySQL to be fully started..."
            sleep 10
          done

      - name: Check MySQL container logs
        run: docker logs mysql

      - name: Check MySQL container status
        run: docker ps -a

      - name: Create Database
        run: |
          docker exec mysql mysql -e "CREATE DATABASE IF NOT EXISTS ${{ secrets.MYSQL_DATABASE }};" -uroot -p${{ secrets.MYSQL_PASSWORD }}

      - name: Build with Maven
        run: mvn clean install 

      - name: Run tests
        run: mvn -B test -e -X --file pom.xml
        env:
          INFLUXDB_URL: ${{ secrets.INFLUXDB_URL }}
          INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
          INFLUXDB_BUCKET: ${{ secrets.INFLUXDB_BUCKET }}
          INFLUXDB_ORG: ${{ secrets.INFLUXDB_ORG }}
          LOG_FILE_PATH: ${{ secrets.LOG_FILE_PATH }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}
