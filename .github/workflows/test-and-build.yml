name: Test and Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          # The MySQL docker container requires these environment variables to be set
          # so we can create and migrate the test database.
          # See: https://hub.docker.com/_/mysql
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        ports:
          # Opens port 3306 on service container and host
          # https://docs.github.com/en/actions/using-containerized-services/about-service-containers
          - 3306:3306
          # Before continuing, verify the mysql container is reachable from the ubuntu host
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: "17"
          distribution: "adopt"

      - name: Wait for MySQL to be ready
        run: |
          while ! mysqladmin ping -h"127.0.0.1" --silent; do
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done

      - name: Deploy to Server
        env:
          INFLUXDB_URL: ${{ secrets.INFLUXDB_URL }}
          INFLUXDB_TOKEN: ${{ secrets.INFLUXDB_TOKEN }}
          INFLUXDB_ORG: ${{ secrets.INFLUXDB_ORG }}
          INFLUXDB_BUCKET: ${{ secrets.INFLUXDB_BUCKET }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_EXPIRATION_TIME: ${{ secrets.JWT_EXPIRATION_TIME }}
        run: echo "Deploying to server..."

      - name: Set up environment
        run: |
          echo "Setting up environment"
          export DB_PASSWORD=${{ secrets.MYSQL_PASSWORD }}

      - name: Deploy Application
        run: |
          echo "Deploying application with password $DB_PASSWORD"

      - name: Build with Maven
        run: mvn clean install 

      - name: Run tests
        run: mvn -B test -e -X --file pom.xml
